{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","messages","setmessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","onClick","roomName","prompt","add","className","to","Avatar","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setrooms","user","unsubscribe","src","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setroomName","sendMessage","e","a","preventDefault","displayName","timestamp","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","SearchOutlined","AttachFile","InsertEmoticon","onChange","target","Mic","actionTypes","state","action","console","log","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a517bd6.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAzfYZbiGAZXfqgCNSv4Td4icZUvL7m_FU\",\r\n    authDomain: \"whatsapp-clone-7708.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-7708\",\r\n    storageBucket: \"whatsapp-clone-7708.appspot.com\",\r\n    messagingSenderId: \"808277465978\",\r\n    appId: \"1:808277465978:web:754a43fc7b0764e29e94c3\",\r\n    measurementId: \"G-KC4GR3EDV4\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider};\r\nexport default db;","import React, {useState, useEffect} from 'react';\r\nimport \"./SidebarChat.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from './firebase';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n\r\n    const [messages, setmessages] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(id) {\r\n            db.collection('rooms')\r\n            .doc(id)\r\n            .collection('messages')\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot(snapshot => (\r\n                setmessages(snapshot.docs.map(doc => doc.data()))\r\n            ))\r\n        }\r\n    }, [id])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat room\")\r\n\r\n        if (roomName) {\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            });\r\n        }\r\n\r\n    }\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar />\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport SearchOutlined from \"@material-ui/icons/Search\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setrooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot =>\r\n            setrooms(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })\r\n            ))\r\n        );\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./Chat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { SearchOutlined, AttachFile, MoreVert, InsertEmoticon, Mic } from \"@material-ui/icons\";\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase'\r\n\r\n\r\nfunction Chat() {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setroomName] = useState(\"\");\r\n    const [messages, setmessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setroomName(snapshot.data().name)\r\n            });\r\n\r\n            db.collection('rooms')\r\n                .doc(roomId)\r\n                .collection('messages')\r\n                .orderBy('timestamp')\r\n                .onSnapshot(snapshot => (\r\n                    setmessages(snapshot.docs.map(doc => doc.data()))\r\n                ))\r\n        }\r\n    }, [roomId])\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar src=\"\" />\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen {\" \"}\r\n                        {new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat_message ${message.name === user.displayName && \"chat_reciever\"}`}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticon />\r\n                <form >\r\n                    <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <Mic />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }; \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport './Login.css';\r\nimport {auth, provider} from './firebase';\r\nimport {useStateValue} from './StateProvider';\r\nimport {actionTypes} from './reducer'\r\n\r\n\r\nfunction Login() {\r\n    const[{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result) => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            })\r\n        })\r\n        .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\" />\r\n\r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign In With Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  \n  const [{user}, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app_body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path='/rooms/:roomId'>\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from './serviceWorker';\nimport reducer, {initialState} from './reducer';\nimport {StateProvider} from './StateProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}\n    reducer={reducer}>\n    <App />\n    </StateProvider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// serviceWorker.unregister();\nreportWebVitals();\n"],"sourceRoot":""}